//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CalculatorClientWinForms.CalculatorServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorServiceRef.CalculatorServiceSoap")]
    public interface CalculatorServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Adunare", ReplyAction="*")]
        double Adunare(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Adunare", ReplyAction="*")]
        System.Threading.Tasks.Task<double> AdunareAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Scadere", ReplyAction="*")]
        double Scadere(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Scadere", ReplyAction="*")]
        System.Threading.Tasks.Task<double> ScadereAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inmultire", ReplyAction="*")]
        double Inmultire(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Inmultire", ReplyAction="*")]
        System.Threading.Tasks.Task<double> InmultireAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Impartire", ReplyAction="*")]
        double Impartire(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Impartire", ReplyAction="*")]
        System.Threading.Tasks.Task<double> ImpartireAsync(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Radical", ReplyAction="*")]
        double Radical(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Radical", ReplyAction="*")]
        System.Threading.Tasks.Task<double> RadicalAsync(double a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RidicareLaPutere", ReplyAction="*")]
        double RidicareLaPutere(double a, double b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RidicareLaPutere", ReplyAction="*")]
        System.Threading.Tasks.Task<double> RidicareLaPutereAsync(double a, double b);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculatorServiceSoapChannel : CalculatorClientWinForms.CalculatorServiceRef.CalculatorServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceSoapClient : System.ServiceModel.ClientBase<CalculatorClientWinForms.CalculatorServiceRef.CalculatorServiceSoap>, CalculatorClientWinForms.CalculatorServiceRef.CalculatorServiceSoap {
        
        public CalculatorServiceSoapClient() {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Adunare(double a, double b) {
            return base.Channel.Adunare(a, b);
        }
        
        public System.Threading.Tasks.Task<double> AdunareAsync(double a, double b) {
            return base.Channel.AdunareAsync(a, b);
        }
        
        public double Scadere(double a, double b) {
            return base.Channel.Scadere(a, b);
        }
        
        public System.Threading.Tasks.Task<double> ScadereAsync(double a, double b) {
            return base.Channel.ScadereAsync(a, b);
        }
        
        public double Inmultire(double a, double b) {
            return base.Channel.Inmultire(a, b);
        }
        
        public System.Threading.Tasks.Task<double> InmultireAsync(double a, double b) {
            return base.Channel.InmultireAsync(a, b);
        }
        
        public double Impartire(double a, double b) {
            return base.Channel.Impartire(a, b);
        }
        
        public System.Threading.Tasks.Task<double> ImpartireAsync(double a, double b) {
            return base.Channel.ImpartireAsync(a, b);
        }
        
        public double Radical(double a) {
            return base.Channel.Radical(a);
        }
        
        public System.Threading.Tasks.Task<double> RadicalAsync(double a) {
            return base.Channel.RadicalAsync(a);
        }
        
        public double RidicareLaPutere(double a, double b) {
            return base.Channel.RidicareLaPutere(a, b);
        }
        
        public System.Threading.Tasks.Task<double> RidicareLaPutereAsync(double a, double b) {
            return base.Channel.RidicareLaPutereAsync(a, b);
        }
    }
}
